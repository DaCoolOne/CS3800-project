
import stdio "stdio"

# Initializes the Process Array
const int_procSize 10
global *int_proc 10

# Initializes the Memory Address Blocks Array
const int_memBlocksSize 256
global *int_memBlocks 256


# This triggers every 2^15 ticks
function KERNEL.TimerTick() {
    (stdio.print "\u")
    (stdio.newline)

    (KERNEL.SETTIMER 0x8000)
}

function begin() {
    (KERNEL.RETI)
}

function initializeProcessArray() {
    for int_i (< int_i int_procSize) (++ int_i) {
        (<> *int_proc -1 int_i)
    }
}

function initializeMemoryBlocks() {
    for int_i (< int_i int_memBlocksSize) (++ int_i) {
        (<> *int_memBlocks 0 int_i)
    }

    set int_i 0 for int_i (< int_i (>> (addr KERNEL.*int_BINEND) 8)) (++ int_i) {
        (<> *int_memBlocks 1 int_i)
    }
}

function createProcess() {
    set int_searchingForBlock 1
    set int_blockIndex -1

    for int_i (&& int_searchingForBlock (< int_i int_procSize)) (++ int_i) {
        if (= ([] *int_proc int_i) -1) {
            (<> *int_proc 0 int_i)
            set int_blockIndex int_i
            set int_searchingForBlock 0
        }
    }

    (stdio.printU int_blockIndex)
    (stdio.print " ")
}

function main() {
    (initializeProcessArray)
    (initializeMemoryBlocks)

    (createProcess)
    (createProcess)
    (createProcess)
    (createProcess)
    (createProcess)

    (stdio.newline)

    # Break us out of kernel mode in a dumb way
    # (enableUserMode)

    loop { }
}