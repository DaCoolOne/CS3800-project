function saveUserRegisters(int_processIndex) {
    set *int_pcbBlockAddress ([] **int_proc int_processIndex)
    set int_temp 0 (<> *int_pcbBlockAddress KERNEL.int_UserReg0 int_PCBUSRREGS)
    set int_temp (++ int_temp) (<> *int_pcbBlockAddress KERNEL.int_UserReg1 (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) (<> *int_pcbBlockAddress KERNEL.int_UserReg2 (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) (<> *int_pcbBlockAddress KERNEL.int_UserReg3 (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) (<> *int_pcbBlockAddress KERNEL.int_UserReg4 (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) (<> *int_pcbBlockAddress KERNEL.int_UserReg5 (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) (<> *int_pcbBlockAddress KERNEL.int_UserReg6 (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) (<> *int_pcbBlockAddress KERNEL.int_UserReg7 (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) (<> *int_pcbBlockAddress KERNEL.int_UserReg8 (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) (<> *int_pcbBlockAddress KERNEL.int_UserReg9 (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) (<> *int_pcbBlockAddress KERNEL.int_UserRegA (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) (<> *int_pcbBlockAddress KERNEL.int_UserRegB (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) (<> *int_pcbBlockAddress KERNEL.int_UserRegC (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) (<> *int_pcbBlockAddress KERNEL.int_UserRegD (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) (<> *int_pcbBlockAddress KERNEL.int_UserRegE (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) (<> *int_pcbBlockAddress KERNEL.int_UserRegF (+ int_PCBUSRREGS int_temp))
}

function loadUserRegisters(int_processIndex) {
    set *int_pcbBlockAddress ([] **int_proc int_processIndex)
    set int_temp 0 set KERNEL.int_UserReg0 ([] *int_pcbBlockAddress int_PCBUSRREGS)
    set int_temp (++ int_temp) set KERNEL.int_UserReg1 ([] *int_pcbBlockAddress (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) set KERNEL.int_UserReg2 ([] *int_pcbBlockAddress (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) set KERNEL.int_UserReg3 ([] *int_pcbBlockAddress (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) set KERNEL.int_UserReg4 ([] *int_pcbBlockAddress (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) set KERNEL.int_UserReg5 ([] *int_pcbBlockAddress (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) set KERNEL.int_UserReg6 ([] *int_pcbBlockAddress (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) set KERNEL.int_UserReg7 ([] *int_pcbBlockAddress (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) set KERNEL.int_UserReg8 ([] *int_pcbBlockAddress (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) set KERNEL.int_UserReg9 ([] *int_pcbBlockAddress (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) set KERNEL.int_UserRegA ([] *int_pcbBlockAddress (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) set KERNEL.int_UserRegB ([] *int_pcbBlockAddress (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) set KERNEL.int_UserRegC ([] *int_pcbBlockAddress (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) set KERNEL.int_UserRegD ([] *int_pcbBlockAddress (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) set KERNEL.int_UserRegE ([] *int_pcbBlockAddress (+ int_PCBUSRREGS int_temp))
    set int_temp (++ int_temp) set KERNEL.int_UserRegF ([] *int_pcbBlockAddress (+ int_PCBUSRREGS int_temp))
}
