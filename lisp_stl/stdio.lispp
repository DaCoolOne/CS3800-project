

import utils "utils"

function printU(int_n) {
    set int_largeDigit 1
    while (< int_largeDigit (/ int_n 10)) {
        set int_largeDigit (* int_largeDigit 10)
    }
    while (> int_largeDigit 0) {
        set int_digit (/ int_n int_largeDigit)
        (KERNEL.PRINTL (+ int_digit 0x30))
        set int_n (- int_n (* int_digit int_largeDigit))
        set int_largeDigit (/ int_largeDigit 10)
    }
}

function printS(int_n) {
    if (>> int_n 15) {
        (KERNEL.PRINTL 0x2D) # Print hypen
        set int_n (- 0 int_n)
    }
    (printU int_n)
}

function printHex(int_n) {
    set int_largeDigit 0xF000
    for int_c (< int_c 4) (++ int_c) {
        set int_digit (>> (& int_largeDigit int_n) (<< (- 3 int_c) 2))
        if (< int_digit 9) {
            (KERNEL.PRINTL (+ int_digit 0x30))
        }
        else {
            (KERNEL.PRINTL (+ int_digit 0x26))
        }
        set int_largeDigit (>> int_largeDigit 4)
    }
}

# Newline flushes the buffer automagically
function newline() {
    (KERNEL.PRINTL 0xA)
}

function flush() {
    (KERNEL.PRINTFLUSH)
}

function print(str_s) {
    set int_index 0
    set int_a (utils.getChar str_s int_index)
    while (i int_a) {
        (KERNEL.PRINTL int_a)
        set int_index (++ int_index)
        set int_a (utils.getChar str_s int_index)
    }
}

